version: "3.9"

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-flaskdb}
      POSTGRES_USER: ${POSTGRES_USER:-flaskuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-flaskpass}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-flaskuser} -d ${POSTGRES_DB:-flaskdb}"]
      interval: 5s
      timeout: 5s
      retries: 20

  web:
    build: .
    environment:
      FLASK_ENV: ${FLASK_ENV:-development}
      SECRET_KEY: ${SECRET_KEY:-devsecret}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-devjwtsecret}
      DATABASE_URL: ${DATABASE_URL:-}
      POSTGRES_DB: ${POSTGRES_DB:-flaskdb}
      POSTGRES_USER: ${POSTGRES_USER:-flaskuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-flaskpass}
      POSTGRES_HOST: ${POSTGRES_HOST:-db}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      OAUTH_GOOGLE_CLIENT_ID: ${OAUTH_GOOGLE_CLIENT_ID:-}
      OAUTH_GOOGLE_CLIENT_SECRET: ${OAUTH_GOOGLE_CLIENT_SECRET:-}
      OAUTH_REDIRECT_URI: ${OAUTH_REDIRECT_URI:-}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    command: bash -c "python scripts/wait_for_db.py && gunicorn -b 0.0.0.0:8000 'app:create_app()'"
    volumes:
      - .:/app

volumes:
  db_data: